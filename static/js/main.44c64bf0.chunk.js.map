{"version":3,"sources":["styles/theme.js","utils/NavigationClient.js","ui-components/WelcomeName.jsx","authConfig.js","ui-components/SignInButton.jsx","ui-components/AccountPicker.jsx","ui-components/SignOutButton.jsx","ui-components/SignInSignOutButton.jsx","styles/useStyles.js","ui-components/SFLogo.jsx","ui-components/NavBar.jsx","ui-components/MadeWithLove.js","ui-components/ForkOnGithub.jsx","ui-components/PageLayout.jsx","pages/Logout.jsx","utils/CalendarDataUtil.js","ui-components/calendar/CellAvailable.jsx","ui-components/calendar/CellBooked.jsx","ui-components/calendar/CalendarData.jsx","ui-components/Loading.jsx","ui-components/ErrorComponent.jsx","utils/MSALSetup.js","utils/MsGraphApiCall.js","utils/CalendarService.js","ui-components/calendar/InstantBook.jsx","pages/Calendar.jsx","App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","blue","secondary","green","error","red","A400","background","default","CustomNavigationClient","history","url","options","a","relativePath","replace","window","location","origin","noHistory","this","push","NavigationClient","WelcomeName","instance","useMsal","useState","name","setName","activeAccount","getActiveAccount","useEffect","split","Typography","variant","ua","navigator","userAgent","msie","indexOf","msie11","msedge","firefox","msalConfig","auth","clientId","authority","redirectUri","process","postLogoutRedirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Error","console","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","graphConfig","SignInButton","anchorEl","setAnchorEl","open","Boolean","Button","onClick","event","currentTarget","color","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","loginType","loginPopup","loginRedirect","AccountPicker","props","accounts","handleListItemClick","account","setActiveAccount","reload","prompt","Dialog","aria-labelledby","DialogTitle","List","map","ListItem","button","ListItemAvatar","Avatar","ListItemText","username","homeAccountId","autoFocus","SignOutButton","accountSelectorOpen","setOpen","IconButton","logoutType","logoutPopup","logoutRedirect","SignInSignOutButton","inProgress","useIsAuthenticated","InteractionStatus","Startup","HandleRedirect","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","textDecoration","bookingCell","backgroundColor","grey","display","flexDirection","width","SFLogo","height","textColor","showText","styles","undefined","SvgIcon","viewBox","style","cx","cy","r","x","y","font","NavBar","classes","className","AppBar","position","Toolbar","Link","component","RouterLink","to","sx","alignItems","MadeWithLove","align","href","bottom","right","padding","overflow","transform","boxShadow","zIndex","fontFamily","textAlign","fontWeight","fontSize","lineHeight","transition","content","top","left","breakpoints","down","ForkOnGithub","repoUrl","PageLayout","children","Box","pt","Logout","onRedirectNavigate","BrowserUtils","isInIframe","timeFormat","timeFormatNoTz","calendarTimeZone","zoomBooths","n","interval","dayjs","extend","utc","timezone","getNextWorkingday","date","dayOfWeek","day","add","transformBoothData","boothData","data","intervals","value","availabilityView","occupied","e","ix","reduce","pv","cv","parseInt","available","length","findBooths","calendarData","booths","attendees","filter","address","emailAddress","toLowerCase","acceptedBooths","status","response","enrichCalendarData","dates","startTime","tz","start","dateTime","timeZone","unix","endTime","end","startIndex","Math","floor","endIndex","ceil","arr","i","CellAvailable","Icon","bookClick","React","book","useCallback","duration","then","result","SentimentVeryDissatisfiedIcon","SentimentNeutralIcon","SentimentVerySatisfiedIcon","TableCell","timeslot","aria-controls","aria-haspopup","aria-expanded","size","MenuListProps","CellBooked","deleteEventClick","subject","CalendarData","calendarService","calendarView","useMemo","datesIndexes","timeslotIndex","time","days","dateIndex","TableContainer","Paper","Table","TableHead","TableRow","blueGrey","d","noon","format","TableBody","row","rowIndex","borderBottom","borderRight","scope","CalendarCell","Date","now","Loading","ErrorComponent","errorCode","msalInstance","PublicClientApplication","getAllAccounts","enableAccountStorageEvents","addEventCallback","eventType","EventType","LOGIN_SUCCESS","payload","msalInit","callMsGraphIter","opts","callMsGraph","json","values","acquireTokenSilent","headers","Headers","bearer","accessToken","append","method","fetchUrl","startsWith","fetch","catch","MSALErrorHandler","InteractionRequiredAuthError","acquireTokenRedirect","useCalendarService","startDate","setDates","useApiData","loadBoothData","updateBoothData","loadCalendarData","updateCalendarData","nextDay","hour","minute","second","numDays","nextDayFmt","intervalCount","Array","fill","el","v","getDatePeriod","refresh","callback","deps","setData","body","schedules","availabilityViewInterval","round","JSON","stringify","encodeURIComponent","bookBooth","queryBody","boothResponse","availableBooths","selectedBooth","random","boothId","scheduleId","boothName","boothNumber","bookingResult","bookingData","cancelEvent","eventId","InstantBook","enabled","setEnabled","disabled","CalendarContent","useTheme","useQueryParam","StringParam","narrow","useMediaQuery","timeoutId","setTimeout","clearTimeout","Grid","item","xs","md","lg","container","justifyContent","rowSpacing","Calendar","authRequest","interactionType","InteractionType","Redirect","authenticationRequest","errorComponent","loadingComponent","Pages","path","App","pca","useHistory","navigationClient","setNavigationClient","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","ReactRouterRoute","Route","document","getElementById"],"mappings":"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","file":"static/js/main.44c64bf0.chunk.js","sourcesContent":["import { unstable_createMuiStrictModeTheme as createMuiTheme } from '@mui/material/styles';\nimport {blue, red, green} from \"@mui/material/colors\";\n\n// Create a theme instance.\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[800],\n    },\n    secondary: {\n      main: green[800],\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#FFF',\n    },\n  },\n});\n","import { NavigationClient } from \"@azure/msal-browser\";\n\n/**\n * This is an example for overriding the default function MSAL uses to navigate to other urls in your webpage\n */\nexport class CustomNavigationClient extends NavigationClient{\n    constructor(history) {\n        super();\n        this.history = history;\n    }\n\n    /**\n     * Navigates to other pages within the same web application\n     * You can use the useHistory hook provided by react-router-dom to take advantage of client-side routing\n     * @param url \n     * @param options \n     */\n    async navigateInternal(url, options) {\n        const relativePath = url.replace(window.location.origin, '');\n        if (options.noHistory) {\n            this.history.replace(relativePath);\n        } else {\n            this.history.push(relativePath);\n        }\n\n        return false;\n    }\n}\n","import { useEffect, useState } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport Typography from \"@mui/material/Typography\";\n\nconst WelcomeName = () => {\n    const { instance } = useMsal();\n    const [name, setName] = useState(null);\n\n    const activeAccount = instance.getActiveAccount();\n    useEffect(() => {\n        if (activeAccount) {\n            setName(activeAccount.name.split(' ')[0]);\n        } else {\n            setName(null);\n        }\n    }, [activeAccount]);\n\n    if (name) {\n        return <Typography variant=\"h6\">Welcome, {name}</Typography>;\n    } else {\n        return null;\n    }\n};\n\nexport default WelcomeName;","import { LogLevel } from \"@azure/msal-browser\";\n// Browser check variables\n// If you support IE, our recommendation is that you sign-in using Redirect APIs\n// If you as a developer are testing using Edge InPrivate mode, please add \"isEdge\" to the if check\nconst ua = window.navigator.userAgent;\nconst msie = ua.indexOf(\"MSIE \");\nconst msie11 = ua.indexOf(\"Trident/\");\nconst msedge = ua.indexOf(\"Edge/\");\nconst firefox = ua.indexOf(\"Firefox\");\nconst isIE = msie > 0 || msie11 > 0;\nconst isEdge = msedge > 0;\nconst isFirefox = firefox > 0; // Only needed if you need to support the redirect flow in Firefox incognito\n\n// Config object to be passed to Msal on creation\nexport const msalConfig = {\n    auth: {\n        clientId: \"36bc0775-9527-484c-9c48-2e846090732b\",\n        authority: \"https://login.microsoftonline.com/9c85420c-07ed-40e7-9c4c-4207556dc906\",\n        redirectUri: process.env.PUBLIC_URL,\n        postLogoutRedirectUri: process.env.PUBLIC_URL\n    },\n    cache: {\n        cacheLocation: \"localStorage\",\n        storeAuthStateInCookie: isIE || isEdge || isFirefox\n    },\n    system: {\n        loggerOptions: {\n            loggerCallback: (level, message, containsPii) => {\n                if (containsPii) {\t\n                    return;\t\n                }\n                switch (level) {\t\n                    case LogLevel.Error:\t\n                        console.error(message);\t\n                        return;\t\n                    case LogLevel.Info:\t\n                        console.info(message);\t\n                        return;\t\n                    case LogLevel.Verbose:\t\n                        console.debug(message);\t\n                        return;\t\n                    case LogLevel.Warning:\t\n                        console.warn(message);\t\n                        return;\t\n                    default:\n                        return;\n                }\n            }\n        }\n    }\n};\n\n// Add here scopes for id token to be used at MS Identity Platform endpoints.\nexport const loginRequest = {\n    scopes: [\"User.Read\", \"Calendars.ReadWrite\"]\n};\n\n// Add here the endpoints for MS Graph API services you would like to use.\nexport const graphConfig = {\n    apiBase: \"https://graph.microsoft.com/v1.0\",\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};\n","import { useState } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport Button from \"@mui/material/Button\";\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport { loginRequest } from \"../authConfig\";\n\nexport const SignInButton = () => {\n    const { instance } = useMsal();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleLogin = (loginType) => {\n        setAnchorEl(null);\n\n        if (loginType === \"popup\") {\n            instance.loginPopup(loginRequest);\n        } else if (loginType === \"redirect\") {\n            instance.loginRedirect(loginRequest);\n        }\n    }\n\n    return (\n        <div>\n            <Button\n                onClick={(event) => setAnchorEl(event.currentTarget)}\n                color=\"inherit\"\n            >\n                Login\n            </Button>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n                }}\n                open={open}\n                onClose={() => setAnchorEl(null)}\n            >\n                <MenuItem onClick={() => handleLogin(\"redirect\")} key=\"loginRedirect\">Sign in</MenuItem>\n            </Menu>\n        </div>\n    )\n};","import React from 'react';\nimport { useMsal } from \"@azure/msal-react\";\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AddIcon from '@mui/icons-material/Add';\nimport { loginRequest } from \"../authConfig\";\n\nexport const AccountPicker = (props) => {\n    const { instance, accounts } = useMsal();\n    const { onClose, open } = props;\n\n    const handleListItemClick = (account) => {\n        instance.setActiveAccount(account);\n        if (!account) {\n            instance.loginRedirect({\n                ...loginRequest,\n                prompt: \"login\"\n            })\n        } else {\n            // To ensure account related page attributes update after the account is changed\n            window.location.reload();\n        }\n\n        onClose(account);\n    };\n\n    return (\n        <Dialog onClose={onClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n          <DialogTitle id=\"simple-dialog-title\">Set active account</DialogTitle>\n          <List>\n            {accounts.map((account) => (\n              <ListItem button onClick={() => handleListItemClick(account)} key={account.homeAccountId}>\n                <ListItemAvatar>\n                  <Avatar>\n                    <PersonIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={account.name} secondary={account.username} />\n              </ListItem>\n            ))}\n    \n            <ListItem autoFocus button onClick={() => handleListItemClick(null)}>\n              <ListItemAvatar>\n                <Avatar>\n                  <AddIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Add account\" />\n            </ListItem>\n          </List>\n        </Dialog>\n      );\n};","import { useState } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport IconButton from '@mui/material/IconButton';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport { AccountPicker } from \"./AccountPicker\";\n\nexport const SignOutButton = () => {\n    const { instance } = useMsal();\n    const [accountSelectorOpen, setOpen] = useState(false);\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleLogout = (logoutType) => {\n        setAnchorEl(null);\n\n        if (logoutType === \"popup\") {\n            instance.logoutPopup();\n        } else if (logoutType === \"redirect\") {\n            instance.logoutRedirect();\n        }\n    }\n\n    const handleAccountSelection = () => {\n        setAnchorEl(null);\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <IconButton\n                onClick={(event) => setAnchorEl(event.currentTarget)}\n                color=\"inherit\"\n            >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n                }}\n                open={open}\n                onClose={() => setAnchorEl(null)}\n            >\n                <MenuItem onClick={() => handleAccountSelection()} key=\"switchAccount\">Switch Account</MenuItem>\n                <MenuItem onClick={() => handleLogout(\"redirect\")} key=\"logoutRedirect\">Logout</MenuItem>\n            </Menu>\n            <AccountPicker open={accountSelectorOpen} onClose={handleClose} />\n        </div>\n    )\n};","import { useIsAuthenticated, useMsal } from \"@azure/msal-react\";\nimport { SignInButton } from \"./SignInButton\";\nimport { SignOutButton } from \"./SignOutButton\";\nimport { InteractionStatus } from \"@azure/msal-browser\";\n\nconst SignInSignOutButton = () => {\n    const { inProgress } = useMsal();\n    const isAuthenticated = useIsAuthenticated();\n\n    if (isAuthenticated) {\n        return <SignOutButton />;\n    } else if (inProgress !== InteractionStatus.Startup && inProgress !== InteractionStatus.HandleRedirect) {\n        // inProgress check prevents sign-in button from being displayed briefly after returning from a redirect sign-in. Processing the server response takes a render cycle or two\n        return <SignInButton />;\n    } else {\n        return null;\n    }\n}\n\nexport default SignInSignOutButton;","import { makeStyles } from '@mui/styles';\nimport {grey} from \"@mui/material/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      '& a': {\n          textDecoration: 'none',\n      },\n    },\n    bookingCell: {\n        backgroundColor: grey.A400,\n        \"& div\": {\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"100%\",\n        }\n    }\n}));\n\nexport default useStyles;","import React from \"react\";\nimport { SvgIcon } from \"@mui/material\";\n\nconst SFLogo = ({width, height, color, textColor, showText}) => {\n    const styles = {width: '100px', height: '100px'};\n    if (width) styles.width = width;\n    if (height) styles.height = height;\n    if (!color) color = '#000';\n    if (!textColor) textColor = '#fff'\n    if (showText === undefined) showText = true;\n\n    return (\n        <SvgIcon viewBox=\"0 0 50 20\" style={styles}>\n            <g id=\"logo-socialfinance\">\n                <circle id=\"circle\" cx=\"10\" cy=\"10\" r=\"10\" color={color}/>\n                <rect x=\"22\" y=\"1\" width=\"18\" height=\"18\" color={color}/>\n                {showText && (\n                    <>\n                        <text x=\"10\" y=\"18\" style={{font: \"heavy 20px Klavika Bold, sans-serif\", color: textColor}}>s\n                        </text>\n                        <text x=\"33\" y=\"21\" style={{font: \"heavy 20px Klavika Bold, sans-serif\", color: textColor}}>f\n                        </text>\n                    </>\n                )}\n            </g>\n        </SvgIcon>\n    );\n};\n\nexport default SFLogo;","import {AppBar, Toolbar, Link, Typography} from \"@mui/material\";\nimport WelcomeName from \"./WelcomeName\";\nimport SignInSignOutButton from \"./SignInSignOutButton\";\nimport useStyles from \"../styles/useStyles\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport SFLogo from \"./SFLogo\";\n\nconst NavBar = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n            <Toolbar>\n                <Typography className={classes.title}>\n                    <Link component={RouterLink} to=\"/\" color=\"inherit\" variant=\"h6\" sx={{display: 'flex', alignItems: 'center'}}>\n                        <SFLogo width={75} showText={false} color='#FFF'/> Booth Booking\n                    </Link>\n                </Typography>\n                <WelcomeName />\n                <SignInSignOutButton />\n            </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default NavBar;","import React from \"react\";\nimport {Typography} from \"@mui/material\";\nimport {Link} from \"@mui/material\";\n\n\nconst MadeWithLove = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Made with ❤️ by '}\n            <Link color=\"inherit\" href=\"https://github.com/kws\" sx={{textDecoration: 'none'}}>\n                Kaj\n            </Link>\n        </Typography>\n    );\n};\n\nexport default MadeWithLove;","import React from \"react\";\nimport {makeStyles} from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'fixed',\n        display: 'flex',\n        bottom: 50,\n        right: -130,\n        width: '400px',\n        padding: '2px 1px 1px 1px',\n        background: '#FFF',\n        overflow: 'hidden',\n        transform: 'rotate(-45deg)',\n        '-webkit-transform':' rotate(-45deg)',\n        '-ms-transform': 'rotate(-45deg)',\n        '-moz-transform': 'rotate(-45deg)',\n        '-o-transform': 'rotate(-45deg)',\n        boxShadow: '4px 4px 10px rgba(0, 0, 0, 0.8)',\n        zIndex: 9999,\n        \"& a\": {\n            width: '100%',\n            background: '#000',\n            color: '#fff',\n            textDecoration: 'none',\n            fontFamily: 'arial, sans-serif',\n            textAlign: 'center',\n            fontWeight: 'bold',\n            padding: '5px 40px',\n            fontSize: '1rem',\n            lineHeight: '2rem',\n            position: 'relative',\n            transition: '0.5s',\n            \"&:hover\": {\n                background: 'cornflowerblue',\n                color: '#fff'\n            }\n        },\n        \"& a::before, a::after\": {\n            content: '',\n            width: '100%',\n            display: 'block',\n            position: 'absolute',\n            top: '1px',\n            left: 0,\n            height: '1px',\n            background: '#fff',\n        },\n        \"& a::after\": {\n            bottom: '1px',\n            top: 'auto',\n        },\n        [theme.breakpoints.down('sm')]: {\n            \"& a\": {\n                fontSize: '0.5rem',\n                lineHeight: '1rem',\n            },\n            bottom: 20,\n            right: -170,\n\n        },\n    },\n}));\n\nconst ForkOnGithub = ({repoUrl}) => {\n    const classes = useStyles();\n    return (\n        <span className={classes.root}>\n            <a href={repoUrl}>Fork me on GitHub</a>\n        </span>\n    )\n}\n\nexport default ForkOnGithub;","import NavBar from \"./NavBar\";\nimport {Box} from \"@mui/material\";\nimport MadeWithLove from \"./MadeWithLove\";\nimport ForkOnGithub from \"./ForkOnGithub\";\n\n\n\nexport const PageLayout = (props) => {\n    return (\n        <>\n            <NavBar />\n            <br/>\n            <br/>\n            {props.children}\n            <Box pt={4}>\n                <MadeWithLove/>\n            </Box>\n            <ForkOnGithub repoUrl=\"https://github.com/SocialFinanceDigitalLabs/book-a-booth\" />\n        </>\n    );\n};","import React, { useEffect } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { BrowserUtils } from \"@azure/msal-browser\";\n\nexport function Logout() {\n    const { instance } = useMsal();\n\n    useEffect(() => {\n        instance.logoutRedirect({\n            account: instance.getActiveAccount(),\n            onRedirectNavigate: () => !BrowserUtils.isInIframe()\n        })\n    }, [ instance ]);\n\n    return (\n        <div>Logout</div>\n    )\n}\n","import dayjs from \"dayjs\";\nimport utc from \"dayjs/plugin/utc\";\nimport timezone from \"dayjs/plugin/timezone\";\n\nexport const timeFormat = \"YYYY-MM-DDTHH:mmZ\";\nexport const timeFormatNoTz = \"YYYY-MM-DDTHH:mm\";\n\nexport const calendarTimeZone = \"Europe/London\";\nexport const zoomBooths = [1, 2, 3, 4, 5, 6].map(n => `zoombooth${n}@socialfinance.org.uk`);\nexport const interval = 30*60; // in seconds\nexport const scheduleStart = 8, scheduleEnd = 19;\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\n/**\n * Takes a dayjs object and returns the same day if a working day, or the next working day if a weekend.\n *\n * <code>\n * getNextWorkingday(&lt;a Friday>) => &lt;a Friday>\n *\n * getNextWorkingday(&lt;a Saturday>) => &lt;a Monday>\n * </code>\n *\n * @param date\n * @returns date - the same dayjs passed in, or one representing the next working day.\n */\nexport const getNextWorkingday = date => {\n    const dayOfWeek = date.day();\n    if (dayOfWeek === 0) {\n        return date.add(1, \"day\")\n    } else if (dayOfWeek === 6) {\n        return date.add(2, \"day\")\n    }\n    return date;\n}\n\n/**\n * Takes a start date (defaults to today) and a number of days (defaults to 1) and calculates a complex object\n * to help paint the calendar and fetch availability data.\n *\n * The return object has the following structure:\n *\n * <pre>\n * {\n *    \"dates\": [\n *        {\n *            \"date\": \"2021-10-29\",\n *            \"noon\": 1635505200,\n *            \"startTime\": 1635490800,\n *            \"endTime\": 1635530400\n *        }\n *    ],\n *    \"startTime\": 1635490800,\n *    \"endTime\": 1635530400,\n *    \"interval\": 1800,\n *    \"intervalCount\": 22,\n *    intervals: [\n *      1635490800, 1635492600,\n *      ...\n *      1635526800, 1635528600\n *    ],\n *    datesIndexes: [\n *      [\n *         0,  1,  2,  3,  4,  5,  6,\n *         7,  8,  9, 10, 11, 12, 13,\n *        14, 15, 16, 17, 18, 19, 20,\n *        21\n *      ]\n *    ]\n * }\n * </pre>\n *\n * Interval length is measured in seconds. The intervals are the start times (unix epoch - seconds) of each interval.\n *\n * The date indexes refer to the indexes\n * @param date\n * @param days\n * @returns {{dates: *[], startTime, endTime, interval, intervalCount: number, intervals: number[], datesIndexes: *[]}}\n */\nexport const getDatePeriod = (date, days) => {\n    const dates = []\n    let nextDay = dayjs(date).tz(calendarTimeZone).hour(12).minute(0).second(0);\n    const numDays = days > 0 ? days : 1;\n    for (let i = 0; i < numDays; i++) {\n        nextDay = getNextWorkingday(nextDay);\n        const nextDayFmt = nextDay.format(\"YYYY-MM-DD\");\n        dates.push({\n            date: nextDayFmt,\n            noon: dayjs.tz(`${nextDayFmt}T12:00:00`, calendarTimeZone).unix(),\n            startTime: dayjs.tz(`${nextDayFmt}T${scheduleStart}:00:00`, calendarTimeZone).unix(),\n            endTime: dayjs.tz(`${nextDayFmt}T${scheduleEnd}:00:00`, calendarTimeZone).unix(),\n        });\n        nextDay = nextDay.add(1, \"days\")\n    }\n    const data = {\n        dates,\n        startTime: dates[0].startTime,\n        endTime: dates[dates.length-1].endTime,\n        interval,\n    };\n    data.intervalCount = (data.endTime - data.startTime) / (interval);\n    data.intervals = Array(Math.ceil(data.intervalCount)).fill(0).map(\n        (el, ix) => data.startTime + ix * interval\n    );\n    // Constructs an array of arrays for each date containing the indexes of the scheduling hours\n    data.datesIndexes = dates.map(d =>\n        data.intervals.map((v, ix) =>\n            v >= d.startTime && v < d.endTime ? ix : -1).filter(v => v >= 0)\n    )\n    return data;\n}\n\n/**\n * Processes the data return from the MS Graph Booth Schedule call. The API result contains a list of\n * schedules for each requested resource:\n *\n * <pre>\n * {\n *     \"value\": [\n *         {\n *             \"scheduleId\": \"user@domain.com\",\n *             \"availabilityView\": \"000111001111...\"\n *         }\n *     ]\n * }\n * </pre>\n *\n * This function combines each individual availabilityView into a combined one for the whole query by adding\n * them together, and then then inverts this by taking the total number of schedules and removing the number of\n * occupied:\n *\n * <pre>\n * {\n *     \"value\": [\n *         ...\n *     ],\n *     \"occupied\": [0, 1, 2, 2, 3, 3, 1, 1],\n *     \"available\": [3, 2, 1, 1, 0, 0, 2 ,2]\n * }\n * </pre>\n *\n * @param boothData\n * @param dates\n * @returns {*}\n */\nexport const transformBoothData = (boothData) => {\n    const data = {\n        ...boothData,\n    };\n    const intervals = data.value[0].availabilityView.split(\"\");\n    data.occupied = intervals.map((e, ix) =>\n        data.value.reduce((pv, cv) =>\n            pv + parseInt(cv.availabilityView[ix]), 0))\n    data.available = intervals.map((e, ix) => data.value.length - data.occupied[ix])\n    return data;\n}\n\n/**\n * Processes the data return from the MS Graph Booth Schedule call. The API result contains a list of\n * events for the calendar:\n * <pre>\n * [\n *   {\n *     \"id\": \"...\",\n *     \"subject\": \"...\",\n *     \"start\": {\"dateTime\": \"2021-11-02T14:00\", \"timeZone\": \"UTC\"},\n *     \"end\": {\"dateTime\": \"2021-11-02T14:00\", \"timeZone\": \"UTC\"},\n *     \"attendees\": [\n *        {\n *           \"emailAddress\": {\"name\": \"...\", \"address\": \"...\"},\n *           \"status\": {\"response\": \"accepted\"},\n *           \"type\": \"required\"\n *        },\n *        ...\n *     ]\n *   },\n *   ...\n * ]\n * </pre>\n *\n * Filters the attendee data to add two properties, booths and acceptedBooths that holds the list for\n * \"booth attendees\" and \"booth attendees with accepted status\" only.\n *\n * @param calendarData\n * @returns *[]\n */\nexport const findBooths = calendarData => {\n    return calendarData\n        .map(e => {\n            e = {...e}\n            e.booths = e.attendees.filter(address =>\n                zoomBooths.indexOf(address.emailAddress.address.toLowerCase()) >= 0);\n            e.acceptedBooths = e.booths.filter(address =>\n                address.status.response.toLowerCase().indexOf(\"accepted\") >= 0);\n            return e;\n        })\n}\n\nexport const enrichCalendarData = (calendarData, dates) => {\n    const data = calendarData.map(e => {\n        e = {...e}\n        e.startTime = dayjs.tz(e.start.dateTime, e.start.timeZone).unix();\n        e.endTime = dayjs.tz(e.end.dateTime, e.end.timeZone).unix();\n        e.startIndex = Math.floor((e.startTime  - dates.startTime) / dates.interval);\n        e.endIndex = Math.ceil((e.endTime  - dates.startTime) / dates.interval) - 1;\n        return e;\n    });\n    data.intervals = data.reduce((arr, e) => {\n        for (let i=e.startIndex;i<=e.endIndex;i++) {\n            arr[i] = e.id;\n        }\n        return arr;\n    }, [])\n    return data;\n}\n\n","import React, {useCallback} from \"react\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport TableCell from \"@mui/material/TableCell\";\nimport SentimentVeryDissatisfiedIcon from \"@mui/icons-material/SentimentVeryDissatisfied\";\nimport SentimentNeutralIcon from \"@mui/icons-material/SentimentNeutral\";\nimport SentimentVerySatisfiedIcon from \"@mui/icons-material/SentimentVerySatisfied\";\nimport IconButton from \"@mui/material/IconButton\";\nimport {zoomBooths} from \"../../utils/CalendarDataUtil\";\n\nconst CellAvailable = ({day, bookClick}) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const book = useCallback((duration) => {\n        bookClick(day.start, duration).then(result =>\n            setAnchorEl(null)\n        )}, [day, bookClick]);\n\n    const backgroundColor = `rgba(76,175,80,${day.available/zoomBooths.length})`;\n    let Icon;\n    if (day.available === 0) {\n        Icon = SentimentVeryDissatisfiedIcon;\n    } else if (day.available <= 2) {\n        Icon = SentimentNeutralIcon;\n    } else {\n        Icon = SentimentVerySatisfiedIcon;\n    }\n    return (\n        <TableCell sx={{backgroundColor}} align=\"center\">\n            <IconButton\n                id={`menu-button-${day.timeslot}`}\n                aria-controls={`menu-${day.timeslot}`}\n                aria-haspopup=\"true\"\n                aria-expanded={open ? 'true' : undefined}\n                onClick={handleClick}\n                size=\"small\"\n            >\n                <Icon fontSize=\"small\" />\n            </IconButton>\n            <Menu\n                id={`menu-${day.timeslot}`}\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                    'aria-labelledby': `menu-button-${day.timeslot}`,\n                }}\n            >\n                <MenuItem onClick={() => book(30)}>30 min</MenuItem>\n                <MenuItem onClick={() => book(60)}>60 min</MenuItem>\n                <MenuItem onClick={() => book(90)}>90 min</MenuItem>\n                <MenuItem onClick={() => book(120)}>120 min</MenuItem>\n            </Menu>\n        </TableCell>\n    );\n};\n\nexport default CellAvailable;","import React from \"react\";\nimport TableCell from \"@mui/material/TableCell\";\nimport Button from \"@mui/material/Button\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport {blue} from \"@mui/material/colors\";\n\nconst CellBooked = ({day, deleteEventClick}) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const handleItemClick = () => {\n        setAnchorEl(null);\n        deleteEventClick(day.event[0].id)\n    };\n    return (\n        <TableCell align=\"center\" sx={{backgroundColor: blue[100]}}>\n            <Button\n                id={`menu-button-${day.timeslot}`}\n                aria-controls={`menu-${day.timeslot}`}\n                aria-haspopup=\"true\"\n                aria-expanded={open ? 'true' : undefined}\n                onClick={handleClick}\n                size=\"small\"\n            >{day.event[0].subject}</Button>\n            <Menu\n                id={`menu-${day.timeslot}`}\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                    'aria-labelledby': `menu-button-${day.timeslot}`,\n                }}\n            >\n                <MenuItem onClick={handleItemClick}>Cancel</MenuItem>\n            </Menu>\n        </TableCell>\n        )\n}\n\nexport default CellBooked;","import React, {useMemo} from \"react\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport Table from \"@mui/material/Table\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport Paper from \"@mui/material/Paper\";\nimport dayjs from \"dayjs\";\nimport CellAvailable from \"./CellAvailable\";\nimport CellBooked from \"./CellBooked\";\nimport {blueGrey} from \"@mui/material/colors\";\n\n\nconst CalendarData = ({calendarService, bookClick, deleteEventClick}) => {\n    const {dates, boothData, calendarData} = calendarService;\n    const calendarView = useMemo(() => {\n        if (dates && dates.datesIndexes) {\n            return dates.datesIndexes[0].map(timeslotIndex => {\n                return {\n                    time: dates.intervals[timeslotIndex],\n                    days: dates.datesIndexes.map(dateIndex => {\n                        const timeslot = dateIndex[timeslotIndex];\n                        return {\n                            timeslot,\n                            start: dates.intervals[timeslot],\n                            end: dates.intervals[timeslot] + dates.interval,\n                            available: boothData ? boothData.available[timeslot] : -1,\n                            event: calendarData ? calendarData.filter(e => e.id === calendarData.intervals[timeslot]) : [],\n                        }\n                    })\n                };\n            })\n        } else {\n            return [];\n        }\n    }, [dates, boothData, calendarData])\n\n    return (\n        <TableContainer component={Paper}>\n            <Table sx={{}} size=\"small\">\n                <TableHead>\n                    <TableRow sx={{backgroundColor: blueGrey[300]}}>\n                        <TableCell>Time</TableCell>\n                        {dates.dates.map(d =>\n                            <TableCell key={d.noon} align=\"center\">\n                                {dayjs.unix(d.noon).format(\"ddd, D MMM\")}\n                            </TableCell>\n                        )}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {calendarView.map((row, rowIndex) => {\n                        const borderBottom = rowIndex % 2 === 0 ? 0 : '1px solid #eee';\n                        return (\n                            <TableRow\n                                key={row.time}\n                                sx={{\n                                    'td,th': { borderBottom, borderRight: '1px solid #eee' },\n                                    '&:last-child td, &:last-child th': { borderBottom: 0 }\n                                }}\n                                >\n                                <TableCell component=\"th\" scope=\"row\" sx={{backgroundColor: blueGrey[300]}}>\n                                    { dayjs.unix(row.time).format(\"HH:mm\") }\n                                </TableCell>\n                                { row.days.map(day => <CalendarCell\n                                    key={day.timeslot} day={day} bookClick={bookClick}\n                                    deleteEventClick={deleteEventClick}\n                                />) }\n                            </TableRow>\n                        )})}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )};\nexport default CalendarData;\n\nconst CalendarCell = ({day, bookClick, deleteEventClick}) => {\n    if (day.end < Date.now() / 1000) {\n        return <TableCell sx={{backgroundColor: blueGrey[100]}} />\n    } else if (day.event && day.event.length > 0) {\n        return <CellBooked day={day} deleteEventClick={deleteEventClick} />\n    } else {\n        return <CellAvailable day={day} bookClick={bookClick}/>\n    }\n}\n\n","import {Typography} from \"@mui/material\";\n\nexport const Loading = () => {\n    return <Typography variant=\"h6\">Authentication in progress...</Typography>\n}","import { Typography } from \"@mui/material\";\n\nexport const ErrorComponent = ({error}) => {\n    return <Typography variant=\"h6\">An Error Occurred: {error.errorCode}</Typography>;\n}","// MSAL imports\nimport { PublicClientApplication, EventType } from \"@azure/msal-browser\";\nimport { msalConfig } from \"../authConfig\";\n\nconst msalInit = () => {\n    const msalInstance = new PublicClientApplication(msalConfig);\n\n    // Default to using the first account if no account is active on page load\n    if (!msalInstance.getActiveAccount() && msalInstance.getAllAccounts().length > 0) {\n        // Account selection logic is app dependent. Adjust as needed for different use cases.\n        msalInstance.setActiveAccount(msalInstance.getAllAccounts()[0]);\n    }\n\n    // Optional - This will update account state if a user signs in from another tab or window\n    msalInstance.enableAccountStorageEvents();\n\n    msalInstance.addEventCallback((event) => {\n        if (event.eventType === EventType.LOGIN_SUCCESS && event.payload.account) {\n            const account = event.payload.account;\n            msalInstance.setActiveAccount(account);\n        }\n    });\n    return msalInstance;\n}\n\nexport const msalInstance = msalInit();\n\n","import { loginRequest, graphConfig } from \"../authConfig\";\nimport { msalInstance } from \"./MSALSetup\";\nimport {InteractionRequiredAuthError} from \"@azure/msal-browser\";\n\nexport const callMsGraphIter = async (url, opts) => {\n    let result = await callMsGraph(url, opts);\n    result = await result.json()\n    const values = result.value\n    while (result['@odata.nextLink']) {\n        result = await callMsGraph(result['@odata.nextLink']);\n        result = await result.json()\n        values.push(...result.value)\n    }\n    return values;\n}\n\nexport const callMsGraph = async (url, opts) => {\n    const account = msalInstance.getActiveAccount();\n    if (!account) {\n        throw Error(\"No active account! Verify a user has been signed in and setActiveAccount has been called.\");\n    }\n\n    const response = await msalInstance.acquireTokenSilent({\n        ...loginRequest,\n        account: account\n    });\n\n    const headers = new Headers(opts?.headers);\n    const bearer = `Bearer ${response.accessToken}`;\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        ...opts,\n        headers: headers,\n    };\n\n    const fetchUrl = url.startsWith(\"http\") ? url : `${graphConfig.apiBase}${url}`;\n\n    return fetch(fetchUrl, options)\n        .catch(MSALErrorHandler(msalInstance));\n}\n\nexport const MSALErrorHandler = instance => e => {\n    if (e instanceof InteractionRequiredAuthError) {\n        instance.acquireTokenRedirect({\n            ...loginRequest,\n            account: instance.getActiveAccount()\n        });\n    } else {\n        throw e;\n    }\n}\n\n","import {useCallback, useEffect, useMemo, useState} from \"react\";\nimport {callMsGraph, callMsGraphIter} from \"./MsGraphApiCall\";\nimport {\n    calendarTimeZone, enrichCalendarData, findBooths,\n    getDatePeriod,\n    interval,\n    timeFormat,\n    timeFormatNoTz, transformBoothData,\n    zoomBooths\n} from \"./CalendarDataUtil\";\nimport dayjs from \"dayjs\";\n\n\nexport const useCalendarService = ({startDate, days}) => {\n    const [dates, setDates] = useState({dates: []});\n    const [boothData, updateBoothData] =\n        useApiData(async () => dates.dates.length > 0 && loadBoothData(dates), [dates])\n    const [calendarData, updateCalendarData] =\n        useApiData(async () => dates.dates.length > 0  && loadCalendarData(dates), [dates])\n\n    useEffect(() => {\n        setDates(getDatePeriod(startDate, days));\n    }, [startDate, days])\n\n    useEffect(() => {\n        updateBoothData();\n    }, [updateBoothData])\n\n    useEffect(() => {\n        updateCalendarData();\n    }, [updateCalendarData])\n\n\n    const service = useMemo(() => {\n        return {\n            dates,\n            boothData,\n            calendarData,\n            refresh: () => {\n                updateBoothData();\n                updateCalendarData();\n            }\n        }\n    }, [dates, boothData, calendarData, updateBoothData, updateCalendarData])\n\n    return service;\n}\n\nconst useApiData = (callback, deps) => {\n    const [data, setData] = useState(null);\n    const loadData = useCallback(() => {\n        if (callback) {\n            callback().then(result => setData(result))\n        }\n    }, [...deps]); // eslint-disable-line react-hooks/exhaustive-deps\n    return [data, loadData]\n}\n\n\nconst loadBoothData = async (dates) => {\n    const url = \"/me/calendar/getSchedule\";\n    const headers = {\"Content-Type\": \"application/json\"};\n    const body = {\n        schedules: zoomBooths,\n        startTime: {\n            dateTime: dayjs.unix(dates.startTime).tz(calendarTimeZone).format(timeFormatNoTz),\n            timeZone: calendarTimeZone,\n        },\n        endTime: {\n            dateTime: dayjs.unix(dates.endTime).tz(calendarTimeZone).format(timeFormatNoTz),\n            timeZone: calendarTimeZone,\n        },\n        availabilityViewInterval: Math.round(interval / 60)\n    }\n    const boothData = await callMsGraph(url, {method: \"POST\", headers, body: JSON.stringify(body)});\n    return transformBoothData(await boothData.json(), dates);\n};\n\nconst loadCalendarData = async dates => {\n    const url = `/me/calendar/calendarView?`\n        + `startDateTime=${encodeURIComponent(dayjs.unix(dates.startTime).format(timeFormat))}&`\n        + `endDateTime=${encodeURIComponent(dayjs.unix(dates.endTime).format(timeFormat))}&`\n        + `$select=start,end,subject,attendees&`\n        + `$top=50`\n    const calendarData = findBooths(await callMsGraphIter(url))\n        .filter(e => e.acceptedBooths.length > 0);\n    return enrichCalendarData(calendarData, dates);\n};\n\nexport const bookBooth = async (start, duration) => {\n    const startTime =  dayjs.unix(start).tz(calendarTimeZone);\n    const endTime = startTime.add(duration, \"minutes\");\n    const headers = {\"Content-Type\": \"application/json\"};\n    const queryBody = {\n        schedules: zoomBooths,\n        startTime: {\n            dateTime: startTime.format(timeFormatNoTz),\n            timeZone: calendarTimeZone,\n        },\n        endTime: {\n            dateTime: endTime.format(timeFormatNoTz),\n            timeZone: calendarTimeZone,\n        },\n        availabilityViewInterval: duration\n    }\n\n    const boothResponse = await callMsGraph(\"/me/calendar/getSchedule\",\n        {method: \"POST\", headers, body: JSON.stringify(queryBody)});\n    const boothData = await boothResponse.json();\n    const availableBooths = boothData.value.filter(e => e.availabilityView === \"0\");\n\n    if (availableBooths.length === 0) {\n        return {error: \"nobooth\"};\n    }\n\n    const selectedBooth = availableBooths[Math.floor(Math.random() * availableBooths.length)];\n    const boothId = selectedBooth.scheduleId;\n    const boothName = boothId.split(\"@\")[0];\n    const boothNumber = boothName.replace(\"zoombooth\", '');\n\n    const body = {\n        subject: `Booth ${boothNumber}`,\n        start: {dateTime: startTime.format(timeFormat), timeZone: calendarTimeZone},\n        end: {dateTime: startTime.add(duration, \"minutes\").format(timeFormat), timeZone: calendarTimeZone},\n        attendees: [{emailAddress: {address: selectedBooth.scheduleId}}]\n    }\n    const bookingResult = await callMsGraph(\"/me/calendar/events\",\n        {method: \"POST\", headers, body: JSON.stringify(body)});\n    const bookingData = await bookingResult.json();\n    return {boothId, boothName, boothNumber, bookingData}\n}\n\nexport const cancelEvent = async eventId => {\n    const url = `/me/calendar/events/${eventId}`;\n    return await callMsGraph(url, {method: \"DELETE\"});\n}\n","import React, {useCallback, useState} from \"react\";\nimport Button from \"@mui/material/Button\";\n\nconst InstantBook = ({bookClick}) => {\n    const [open, setOpen] = useState(false);\n    const [enabled, setEnabled] = useState(true);\n    const book = useCallback(async (duration) => {\n        setEnabled(false);\n        await bookClick(Math.floor(Date.now() / 1000), duration)\n        setOpen(false);\n        setEnabled(true);\n    }, [bookClick])\n\n    return  <>\n        {open &&\n            <div>\n            <Button disabled={!enabled} variant=\"outlined\" color=\"secondary\" onClick={() => setOpen(false)}>Dismiss</Button>\n            <Button disabled={!enabled} variant=\"outlined\" onClick={() => book(30)}>30 min</Button>\n            <Button disabled={!enabled} variant=\"outlined\" onClick={() => book(60)}>60 min</Button>\n            <Button disabled={!enabled} variant=\"outlined\" onClick={() => book(90)}>90 min</Button>\n            <Button disabled={!enabled} variant=\"outlined\" onClick={() => book(120)}>120 min</Button>\n            </div>\n        }\n        {!open &&\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => setOpen(true)}>Instant Book</Button>\n        }\n    </>\n\n}\nexport default InstantBook;","import React, {useCallback, useEffect} from \"react\";\nimport { MsalAuthenticationTemplate } from \"@azure/msal-react\";\nimport { InteractionType } from \"@azure/msal-browser\";\nimport { loginRequest } from \"../authConfig\";\n\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport {StringParam, useQueryParam} from \"use-query-params\";\nimport CalendarData from \"../ui-components/calendar/CalendarData\";\nimport { Loading } from \"../ui-components/Loading\";\nimport { ErrorComponent } from \"../ui-components/ErrorComponent\";\nimport {cancelEvent, bookBooth, useCalendarService} from \"../utils/CalendarService\";\nimport InstantBook from \"../ui-components/calendar/InstantBook\";\nimport Grid from \"@mui/material/Grid\";\nimport {useTheme} from \"@emotion/react\";\n\nconst CalendarContent = () => {\n    const theme = useTheme();\n    const [date] = useQueryParam('date', StringParam);\n    const narrow = useMediaQuery('(max-width:750px)');\n    const calendarService = useCalendarService({startDate: date, days: narrow ? 2 : 5});\n\n    useEffect(() => {\n        const timeoutId = setTimeout(() => calendarService.refresh(), 15*1000);\n        return () => {\n            clearTimeout(timeoutId);\n        }\n    }, [calendarService])\n\n    const bookClick = useCallback(async (startTime, duration) => {\n        const bookingResult = await bookBooth(startTime, duration);\n        setTimeout(() => calendarService.refresh(), 3000);\n        setTimeout(() => calendarService.refresh(), 6000);\n        setTimeout(() => calendarService.refresh(), 9000);\n        return bookingResult;\n    }, [calendarService])\n\n    const deleteEventClick = useCallback(async eventId => {\n        await cancelEvent(eventId);\n        setTimeout(() => calendarService.refresh(), 2000);\n        setTimeout(() => calendarService.refresh(), 4000);\n        setTimeout(() => calendarService.refresh(), 6000);\n    }, [calendarService])\n\n    return (\n        <Grid item xs={12} md={10} lg={8}>\n            <Grid container justifyContent=\"left\" xs={{width: '90%'}} rowSpacing={theme.spacing(2)}>\n                <Grid item xs={12} md={3}>\n                    <InstantBook bookClick={bookClick}/>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper>\n                        { calendarService && <>\n                            <CalendarData calendarService={calendarService} bookClick={bookClick}\n                                          deleteEventClick={deleteEventClick} />\n                        </>\n                        }\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={3}>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => calendarService.refresh()}>Refresh</Button>\n                </Grid>\n            </Grid>\n        </Grid>\n\n    );\n};\n\nexport function Calendar() {\n    const authRequest = {\n        ...loginRequest\n    };\n\n    return (\n        <MsalAuthenticationTemplate \n            interactionType={InteractionType.Redirect}\n            authenticationRequest={authRequest} \n            errorComponent={ErrorComponent} \n            loadingComponent={Loading}\n        >\n            <CalendarContent />\n        </MsalAuthenticationTemplate>\n      )\n};","import { Switch, Route, useHistory } from \"react-router-dom\";\n// Material-UI imports\nimport Grid from \"@mui/material/Grid\";\n\n// MSAL imports\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { CustomNavigationClient } from \"./utils/NavigationClient\";\n\nimport { PageLayout } from \"./ui-components/PageLayout\";\nimport { Logout } from \"./pages/Logout\";\nimport {Calendar} from \"./pages/Calendar\";\n\nfunction App({ pca }) {\n  // The next 3 lines are optional. This is how you configure MSAL to take advantage of the router's navigate functions when MSAL redirects between pages in your app\n  const history = useHistory();\n  const navigationClient = new CustomNavigationClient(history);\n  pca.setNavigationClient(navigationClient);\n\n  return (\n    <MsalProvider instance={pca}>\n      <PageLayout>\n        <Grid container justifyContent=\"center\">\n          <Pages />\n        </Grid>\n      </PageLayout>\n    </MsalProvider>\n  );\n}\n\nfunction Pages() {\n  return (\n    <Switch>\n      <Route path=\"/logout\">\n          <Logout />\n      </Route>\n      <Route path=\"/\">\n          <Calendar />\n      </Route>\n    </Switch>\n  )\n}\n\nexport default App;\n","// If you need to support IE11 uncomment the imports below\n//import \"react-app-polyfill/ie11\";\n//import \"core-js/stable\"; \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport {CssBaseline, ThemeProvider} from '@mui/material';\nimport { QueryParamProvider } from 'use-query-params';\nimport { theme } from \"./styles/theme\";\nimport App from './App';\nimport {msalInstance} from \"./utils/MSALSetup\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <CssBaseline/>\n        <Router>\n            <ThemeProvider theme={theme}>\n                <QueryParamProvider ReactRouterRoute={Route}>\n                    <App pca={msalInstance} />\n                </QueryParamProvider>\n            </ThemeProvider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}